load("@npm//@bazel/typescript:index.bzl", "ts_config")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("//src/dev/bazel:index.bzl", "jsts_transpiler", "pkg_npm", "pkg_npm_types", "ts_project")

PKG_DIRNAME = "core-apps-server-internal"
PKG_REQUIRE_NAME = "@kbn/core-apps-server-internal"

SOURCE_FILES = glob(
  [
    "**/*.ts",
  ],
  exclude = [
    "**/*.config.js",
    "**/*.mock.*",
    "**/*.test.*",
    "**/*.stories.*",
    "**/__snapshots__/**",
    "**/integration_tests/**",
    "**/mocks/**",
    "**/scripts/**",
    "**/storybook/**",
    "**/test_fixtures/**",
    "**/test_helpers/**",
  ],
)

SRCS = SOURCE_FILES

filegroup(
  name = "srcs",
  srcs = SRCS,
)

NPM_MODULE_EXTRA_FILES = [
  "package.json",
]

# In this array place runtime dependencies, including other packages and NPM packages
# which must be available for this code to run.
#
#  To reference other packages use:
#    "//repo/relative/path/to/package"
#    eg. "//packages/kbn-utils"
#
#  To reference a NPM package use:
#    "@npm//name-of-package"
#    eg. "@npm//lodash"
RUNTIME_DEPS = [
  "@npm//elastic-apm-node",
  "@npm//fs",
  "@npm//lru-cache",
  "@npm//mime-types",
  "//packages/kbn-config",
  "//packages/kbn-config-schema",
  "//packages/kbn-utils",
  "//packages/kbn-logging",
  "//packages/kbn-ui-shared-deps-npm",
  "//packages/kbn-ui-shared-deps-src",
  "//packages/core/base/core-base-server-internal",
  "//packages/core/lifecycle/core-lifecycle-server-internal",
  "//packages/core/plugins/core-plugins-base-server-internal",
]

# In this array place dependencies necessary to build the types, which will include the
# :npm_module_types target of other packages and packages from NPM, including @types/*
# packages.
#
#  To reference the types for another package use:
#    "//repo/relative/path/to/package:npm_module_types"
#    eg. "//packages/kbn-utils:npm_module_types"
#
#  References to NPM packages work the same as RUNTIME_DEPS
TYPES_DEPS = [
  "@npm//elastic-apm-node",
  "@npm//fs",
  "@npm//@types/node",
  "@npm//@types/jest",
  "@npm//@types/lru-cache",
  "@npm//@types/mime-types",
  "//packages/kbn-config:npm_module_types",
  "//packages/kbn-config-schema:npm_module_types",
  "//packages/kbn-ui-shared-deps-npm:npm_module_types",
  "//packages/kbn-ui-shared-deps-src:npm_module_types",
  "//packages/kbn-utils:npm_module_types",
  "//packages/kbn-logging:npm_module_types",
  "//packages/core/base/core-base-server-internal:npm_module_types",
  "//packages/core/http/core-http-resources-server:npm_module_types",
  "//packages/core/http/core-http-server:npm_module_types",
  "//packages/core/lifecycle/core-lifecycle-server-internal:npm_module_types",
  "//packages/core/plugins/core-plugins-base-server-internal:npm_module_types",
]

jsts_transpiler(
  name = "target_node",
  srcs = SRCS,
  build_pkg_name = package_name(),
)

ts_config(
  name = "tsconfig",
  src = "tsconfig.json",
  deps = [
    "//:tsconfig.base.json",
    "//:tsconfig.bazel.json",
  ],
)

ts_project(
  name = "tsc_types",
  args = ['--pretty'],
  srcs = SRCS,
  deps = TYPES_DEPS,
  declaration = True,
  declaration_map = True,
  emit_declaration_only = True,
  out_dir = "target_types",
  tsconfig = ":tsconfig",
)

js_library(
  name = PKG_DIRNAME,
  srcs = NPM_MODULE_EXTRA_FILES,
  deps = RUNTIME_DEPS + [":target_node"],
  package_name = PKG_REQUIRE_NAME,
  visibility = ["//visibility:public"],
)

pkg_npm(
  name = "npm_module",
  deps = [":" + PKG_DIRNAME],
)

filegroup(
  name = "build",
  srcs = [":npm_module"],
  visibility = ["//visibility:public"],
)

pkg_npm_types(
  name = "npm_module_types",
  srcs = SRCS,
  deps = [":tsc_types"],
  package_name = PKG_REQUIRE_NAME,
  tsconfig = ":tsconfig",
  visibility = ["//visibility:public"],
)

filegroup(
  name = "build_types",
  srcs = [":npm_module_types"],
  visibility = ["//visibility:public"],
)
