#!/bin/bash
# filepath: scripts/doc_analysis.sh

echo "=== Kibana Documentation Analysis ==="

# Define search paths for packages and plugins
SEARCH_PATHS=(
  "packages"
  "src/platform"
  "x-pack/packages"
  "x-pack/platform/packages"
  "x-pack/solutions/*/packages"
  "x-pack/solutions/*/plugins"
)

# Count total packages/plugins
total_dirs=0
for path in "${SEARCH_PATHS[@]}"; do
  if [[ "$path" == *"*"* ]]; then
    # Handle glob patterns
    total_dirs=$((total_dirs + $(find . -type d -path "./$path" 2>/dev/null | wc -l)))
  else
    total_dirs=$((total_dirs + $(find "$path" -mindepth 1 -maxdepth 1 -type d 2>/dev/null | wc -l)))
  fi
done

echo "Total packages/plugins found: $total_dirs"

# Find directories without README.md
echo -n "Packages without README.md: "
no_readme=0
for path in "${SEARCH_PATHS[@]}"; do
  if [[ "$path" == *"*"* ]]; then
    dirs=$(find . -type d -path "./$path" 2>/dev/null)
  else
    dirs=$(find "$path" -mindepth 1 -maxdepth 1 -type d 2>/dev/null)
  fi

  for dir in $dirs; do
    if [[ ! -f "$dir/README.md" ]]; then
      ((no_readme++))
    fi
  done
done

if [ $total_dirs -gt 0 ]; then
  percentage=$(echo "scale=1; $no_readme * 100 / $total_dirs" | bc 2>/dev/null || echo "0.0")
  echo "$no_readme ($percentage%)"
else
  echo "$no_readme (0.0%)"
fi

# Find generated/placeholder READMEs
echo -n "Generated/Placeholder READMEs: "
generated=0
for path in "${SEARCH_PATHS[@]}"; do
  if [[ "$path" == *"*"* ]]; then
    readmes=$(find . -name "README.md" -path "./$path" 2>/dev/null)
  else
    readmes=$(find "$path" -name "README.md" 2>/dev/null)
  fi

  for readme in $readmes; do
    if grep -q -E "(This is a placeholder|TODO: Add documentation|Generated by.*generator|Add your plugin description)" "$readme" 2>/dev/null; then
      ((generated++))
    fi
  done
done
echo "$generated"

# Find short READMEs (likely minimal)
echo -n "Short READMEs (<100 words): "
short_readmes=0
for path in "${SEARCH_PATHS[@]}"; do
  if [[ "$path" == *"*"* ]]; then
    readmes=$(find . -name "README.md" -path "./$path" 2>/dev/null)
  else
    readmes=$(find "$path" -name "README.md" 2>/dev/null)
  fi

  for readme in $readmes; do
    word_count=$(wc -w < "$readme" 2>/dev/null || echo 0)
    if [[ $word_count -lt 100 ]]; then
      ((short_readmes++))
    fi
  done
done
echo "$short_readmes"

# Find comprehensive READMEs (with multiple sections)
echo -n "Comprehensive READMEs (>300 words + sections): "
comprehensive=0
for path in "${SEARCH_PATHS[@]}"; do
  if [[ "$path" == *"*"* ]]; then
    readmes=$(find . -name "README.md" -path "./$path" 2>/dev/null)
  else
    readmes=$(find "$path" -name "README.md" 2>/dev/null)
  fi

  for readme in $readmes; do
    word_count=$(wc -w < "$readme" 2>/dev/null || echo 0)
    section_count=$(grep -c "^#" "$readme" 2>/dev/null || echo 0)
    if [[ $word_count -gt 300 && $section_count -gt 3 ]]; then
      ((comprehensive++))
    fi
  done
done
echo "$comprehensive"

echo ""
echo "=== Quality Breakdown ==="
echo "No Documentation: $no_readme"
echo "Generated/Placeholder: $generated"
echo "Minimal Documentation: $short_readmes"
echo "Comprehensive Documentation: $comprehensive"

# Calculate and display percentages for quality breakdown
if [ $total_dirs -gt 0 ]; then
  echo ""
  echo "=== Percentage Breakdown ==="
  no_doc_pct=$(echo "scale=1; $no_readme * 100 / $total_dirs" | bc 2>/dev/null || echo "0.0")
  gen_pct=$(echo "scale=1; $generated * 100 / $total_dirs" | bc 2>/dev/null || echo "0.0")
  min_pct=$(echo "scale=1; $short_readmes * 100 / $total_dirs" | bc 2>/dev/null || echo "0.0")
  comp_pct=$(echo "scale=1; $comprehensive * 100 / $total_dirs" | bc 2>/dev/null || echo "0.0")

  echo "No Documentation: $no_doc_pct%"
  echo "Generated/Placeholder: $gen_pct%"
  echo "Minimal Documentation: $min_pct%"
  echo "Comprehensive Documentation: $comp_pct%"
fi

# Show examples of packages without READMEs
echo ""
echo "=== Examples of packages without README.md ==="
count=0
for path in "${SEARCH_PATHS[@]}"; do
  if [[ "$path" == *"*"* ]]; then
    dirs=$(find . -type d -path "./$path" 2>/dev/null)
  else
    dirs=$(find "$path" -mindepth 1 -maxdepth 1 -type d 2>/dev/null)
  fi

  for dir in $dirs; do
    if [[ ! -f "$dir/README.md" && $count -lt 10 ]]; then
      echo "  - $dir"
      ((count++))
    fi
  done

  if [[ $count -ge 10 ]]; then
    break
  fi
done

if [[ $no_readme -gt 10 ]]; then
  echo "  ... and $((no_readme - 10)) more packages without README.md"
fi
